image:
  repository: 753253020381.dkr.ecr.eu-west-1.amazonaws.com/liquidity-request-service
  pullPolicy: IfNotPresent
  tag: IMAGE_TAG

nameOverride: "liquidity-request-service"
fullnameOverride: "liquidity-request-service"

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-west-1:753253020381:certificate/9396cd12-bdac-492e-8e94-96fbbe186d91
    alb.ingress.kubernetes.io/tags: Environment=staging
    alb.ingress.kubernetes.io/healthcheck-path: /healthcheck
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '30'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '300'
    alb.ingress.kubernetes.io/security-groups: "terraform-eks-k8s-staging-alb"
    alb.ingress.kubernetes.io/ssl-policy: "ELBSecurityPolicy-FS-1-2-2019-08"
  paths:
    - path: /*

api:
  replicas: 1
  port: 3000
  health_check_period: 60
  health_check_delay: 60
  health_check_timeout: 5
  failure_threshold: 5
  health_check_path: /healthcheck

  env:
    APP_REVISION: APP_REVISION_VALUE
    DD_VERSION: APP_REVISION_VALUE
    DD_SERVICE: liquidity-request-service
    DD_ENV: staging

  resources:
    limits:
      memory: 500Mi
    requests:
      memory: 350Mi
  nameOverride: liquidity-request-service

autoscalingmetrics:
  enabled: false
  dimensions:
    name: Queue
    value: "liquidity-request-service/staging/default"
  period: 180
  stat: Average
  unit: Count

initcontainers:
  enabled: true

sidekiq:
  enabled: true
  replicas: 1
  resources:
    limits:
      memory: 300Mi
    requests:
      memory: 200Mi

  resources:
    limits:
      memory: 400Mi
    requests:
      memory: 350Mi
